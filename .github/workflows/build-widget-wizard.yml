name: Build Widget Wizard

on:
  # 1) Automatic trigger on tag push
  push:
    tags:
      - "*"
  # 2) Manual trigger from the Actions tab
  workflow_dispatch:
    inputs:
      tag_name:
        description: "Existing tag to build"
        required: true

jobs:
  build-acap:
    name: Build Widget Wizard Binary
    runs-on: ubuntu-latest

    steps:
      # Determine which tag to build:
      # - If triggered by push (tags), use github.ref_name
      # - If triggered manually (workflow_dispatch), use inputs.tag_name
      - name: Set TAG variable
        id: set_tag
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "TAG=${{ inputs.tag_name }}" >> $GITHUB_ENV
          else
            # 'refs/tags/x.y.z' -> 'x.y.z'
            SHORT_REF="${GITHUB_REF#refs/tags/}"
            echo "TAG=$SHORT_REF" >> $GITHUB_ENV
          fi

      # Check out the repository at the correct tag:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: ${{ env.TAG }}

      # OPTIONAL: Validate the TAG format (e.g., x.y.z):
      - name: Validate tag
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          if [[ ! "${{ env.TAG }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Tag must be in the format x.y.z"
            exit 1
          fi

      # Set up Docker Buildx:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Build the Docker image (equivalent to `make dockersetup`):
      - name: Build Docker Image
        run: |
          docker buildx build \
            --load \
            --progress=plain \
            -f docker/Dockerfile \
            ./docker -t widget_wizard_img_aarch64

      # Run ACAP build inside Docker (equivalent to `make acap`):
      - name: Build .eap inside Docker
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            widget_wizard_img_aarch64 \
            ./docker/build_aarch64.sh 1 widget_wizard "Widget Wizard" y

      # Create (or update) GitHub Release for the tag in env.TAG:
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG }}
          release_name: Build for ${{ env.TAG }}
          draft: false
          prerelease: false

      # Detect the .eap file produced by the build:
      - name: Find EAP file
        id: find_eap
        run: |
          EAP_FILE=$(ls -1 *.eap 2>/dev/null | head -n1)
          if [ -z "$EAP_FILE" ]; then
            echo "No .eap file found!"
            exit 1
          fi
          echo "Found EAP file: $EAP_FILE"
          echo "EAP_FILE=$EAP_FILE" >> $GITHUB_OUTPUT

      # Upload the .eap file as a Release asset:
      - name: Upload EAP file to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_eap.outputs.EAP_FILE }}
          asset_name: ${{ steps.find_eap.outputs.EAP_FILE }}
          asset_content_type: application/octet-stream
